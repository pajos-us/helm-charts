apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent-logs
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: grafana-agent-logs
  template:
    metadata:
      labels:
        name: grafana-agent-logs
    spec:
      containers:
      - args:
        - -config.expand-env=true
        - -config.file=/etc/agent/agent.yaml
        - -server.http.address=0.0.0.0:80
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        name: grafana-agent-logs
        ports:
        - containerPort: 80
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: grafana-agent-logs
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: grafana-agent-logs
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: grafana-agent-logs
        name: grafana-agent-logs
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate