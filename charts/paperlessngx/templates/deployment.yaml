apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1-amd64
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4180
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 4180
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 4180
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: "vault:secret/data/k8s/paperlessngx/paperlessngx#client-id"
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: "vault:secret/data/k8s/paperlessngx/paperlessngx#client-secret"
        - name: OAUTH2_PROXY_HTTP_ADDRESS
          value: "0.0.0.0:4180"
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          value: {{ .Values.oidc_issuer_url }}
        - name: OAUTH2_PROXY_CODE_CHALLENGE_METHOD
          value: "S256"
        - name: OAUTH2_PROXY_PROVIDER
          value: "oidc"
        - name: OAUTH2_PROXY_PROVIDER_DISPLAY_NAME
          value: "authentik"
        - name: OAUTH2_PROXY_REDIS_CONNECTION_URL
          value: "redis://redis-master.redis:6379"
        - name: OAUTH2_PROXY_REVERSE_PROXY
          value: "true"
        - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
          value: "true"
        - name: OAUTH2_PROXY_UPSTREAM
          value: "http://localhost:8000"
        - name: OAUTH2_PROXY_EMAIL_DOMAINS
          value: "*"
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "vault:secret/data/k8s/paperlessngx/paperlessngx#cookie-secret"
      - envFrom:
        - configMapRef:
            name: {{ .Release.Name }}
        env:
        - name: PAPERLESS_ADMIN_PASSWORD
          value: "vault:secret/data/k8s/shared/root#password"
        - name: PAPERLESS_DBPASS
          value: "vault:secret/data/k8s/paperlessngx/paperlessngx#db-password"
        - name: PAPERLESS_SECRET_KEY
          value: "vault:secret/data/k8s/shared/root#password"
        image: paperlessngx/paperless-ngx:2.4.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        name: paperlessngx
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /media
          name: media
      serviceAccountName: {{ .Release.Name }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-data
      - name: media
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-media